@import '../../../includeMedia.scss';
$breakpoints: (
  phone: 320px,
  customSize: 550px,
  tablet: 840px,
);
$primary-color: rgb(255, 85, 1);
.appbar {
  width: 75px;
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  border-radius: 0 0.25rem 0.25rem 0;
  box-shadow: 1px 0 30px rgba(8, 8, 8, 0.7);
  user-select: none;
  @include media('>=phone', '<=tablet') {
    flex-direction: row;
    width: 100%;
    height: 75px;
    min-height: 75px;
  }
  @include media('>=phone', '<=400px') {
    height: 50px;
    min-height: 50px;
  }
  > div {
    position: relative;
    margin-top: 20px;
    padding: 5px;
    cursor: pointer;
    @include media('>=phone', '<=tablet') {
      display: flex;
      justify-content: center;
      margin: 0 5px;
    }
    &:hover {
      background: linear-gradient(
        to right,
        rgba(255, 255, 255, 0.7),
        rgba(255, 255, 255, 0.3)
      );
      border-radius: 0.25rem;
    }
    .icon-wrapper {
      width: 50%;
      margin: auto;
      @include media('>=phone', '<=customSize') {
        width: 80%;
        margin: auto 0;
      }
      img {
        max-width: 100%;
        height: auto;
      }
    }
    &::before,
    &::after {
      position: absolute;
      top: 50%;
      right: -0.625rem;
      transform: translateX(100%) translateY(-50%) scale(0);
      transition: transform ease-in 100ms;
      transform-origin: left center;
    }
    &::before {
      width: max-content;
      text-align: center;
      padding: 0.5rem;
      font-size: 0.75rem;
      max-width: 100%;
      border-radius: 0.25rem;
      background-color: $primary-color;
      content: attr(data-tooltip);
      @include media('>=phone', '<=tablet') {
        content: none;
      }
    }
    &::after {
      content: '';
      border: 5px solid transparent;
      border-right-color: $primary-color;
      right: -1px;
      @include media('>=phone', '<=tablet') {
        content: none;
      }
    }
    &:hover {
      &::before {
        transform: translateX(100%) translateY(-50%) scale(1);
      }
      &::after {
        transform: translateX(100%) translateY(-50%) scale(1);
      }
    }
  }
}
